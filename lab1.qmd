---
title: "Lab 1: Gapminder Data Visualization"
format:
  html:
    embed-resources: true
---

<https://github.com/allydato/week1.git>

```{python}
import numpy as np
import pandas as pd
from plotnine import *
```

## Task 1

1. The aesthetics used are:
    * x = "income"; The x-axis represents GDP per capita.
    * y = "life_exp"; The y-axis represents life expectancy.
    * size = "population"; Each bubble represents a country and bubble size represents population size.
    * fill = "four_regions"; The color represents the world region of that country.

2. Import `q1data.csv`.

```{python}
df1 = pd.read_csv(r"C:\Users\aliss\OneDrive\Documents\544\data\q1data.csv")
df1.dropna(inplace = True)
df1.head()
```

3. Recreate plot.

```{python}
(ggplot(df1, aes(x = "income", y = "life_exp", size = "population", fill = "four_regions"))
    + geom_point(alpha = 0.5)
    + scale_size_area(max_size = 20)
    + labs(
        title = "Task 1 Bubble Plot",
        x = "GDP per capita",
        y = "Life expectancy",
        fill = "World regions")
    + guides(size = "none")
    + scale_x_continuous(limits = (0, 64000), breaks = [500, 1000, 2000, 4000, 8000, 16000, 32000, 64000])
    + scale_y_continuous(limits = (20, 90), breaks = np.arange(20, 100, 10)))
```

4. Some other options include `geom_bar`, `geom_boxplot`, `geom_histogram`, and `geom_line`. The example below shows the same data represented by `geom_bar`, a bar plot. This is not an optimal way to visualize the data because a bar plot shows less variables than a bubble plot. In this case, we had to exclude population size and life expectancy. Additionally, since GDP per capita is continuous, there are so many different values that the bars are thin.

```{python}
(ggplot(df1, aes(x = "income", fill = "four_regions"))
+ geom_bar(position = "dodge"))
```

## Task 2

1. The aesthetics used are:
    * x = "exports"; The x-axis represents the percentage of GDP generated by exports.
    * y = "life_exp"; The y-axis represents the percentage of GDP generated by imports.
    * size = "energy"; Each bubble represents a country and bubble size represents energy use per person.
    * fill = "four_regions"; The color represents the world region of that country.

2. Import `q2data.csv`.

```{python}
df2 = pd.read_csv(r"C:\Users\aliss\OneDrive\Documents\544\data\q2data.csv")
df2.dropna(inplace = True)
df2.head()
```

3. Recreate plot.

```{python}
(ggplot(df2, aes(x = "exports", y = "imports", size = "energy", fill = "four_regions"))
    + geom_point(alpha = 0.5)
    + labs(
        title = "Task 2 Bubble Plot",
        x = r"Exports (% of GDP)",
        y = r"Imports (% of GDP)",
        fill = "World regions")
    + guides(size = "none")
    + scale_x_continuous(limits = (0, 220), breaks = np.arange(0, 240, 20))
    + scale_y_continuous(limits = (0, 400), breaks = np.arange(0, 450, 50)))
```

4. Some other options include `geom_bar`, `geom_boxplot`, `geom_histogram`, and `geom_line`. The example below shows the same data represented by `geom_histogram`, a histogram. This is a better but not optimal way to visualize the data because a histogram shows less variables than a bubble plot. In this case, we had to exclude percentage of GDP represented by imports and energy use per person.

```{python}
(ggplot(df2, aes(x = "exports", fill = "four_regions"))
+ geom_histogram(bins = 10))
```

## Task 3

1. The aesthetics used are:
    * x = "internet_users"; The x-axis represents the number of Internet users.
    * y = "gdp"; The y-axis represents GDP per capita.
    * size = "income"; Each bubble represents a country and bubble size represents average income.
    * fill = "four_regions"; The color represents the world region of that country.

2. Import `q3data.csv`.

```{python}
df3 = pd.read_csv(r"C:\Users\aliss\OneDrive\Documents\544\data\q3data.csv")
df3.dropna(inplace = True)
df3.head()
```

3. Recreate plot.

```{python}
(ggplot(df3, aes(x = "internet_users", y = "gdp", size = "income", fill = "four_regions"))
    + geom_point(alpha = 0.5)
    + scale_size_area(max_size = 10)
    + labs(
        title = "Task 3 Bubble Plot",
        x = "Individuals using the Internet",
        y = "GDP/capita",
        fill = "World regions")
    + guides(size = "none")
    + scale_x_continuous(limits = (0, 100), breaks = np.arange(0, 110, 10))
    + scale_y_continuous(limits = (0, 100000), breaks = [200, 500, 1000, 2000, 5000, 10000, 20000, 50000, 100000]))
```

4. Some other options include `geom_bar`, `geom_boxplot`, `geom_histogram`, and `geom_line`. The example below shows the same data represented by `geom_boxplot`, a boxplot. This is a better but not optimal way to visualize the data because a boxplot shows less variables than a bubble plot. In this case, we had to exclude average income.

```{python}
(ggplot(df3, aes(x = "internet_users", y = "gdp", fill = "four_regions"))
+ geom_boxplot())
```